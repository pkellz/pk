{"version":3,"sources":["components/Home.js","components/ProjectOverlay.js","assets/portfolioData.js","components/Portfolio.js","components/About.js","serviceWorker.js","index.js","components/App.js"],"names":["Home","src","ProjectOverlay","props","className","id","title","onClick","setProject","project","name","img","href","link","target","style","fontSize","marginLeft","description","map","paragraph","tech","p","Portfolio","useState","showProject","currentProject","setCurrentProject","transitions","useTransition","from","opacity","enter","position","leave","to","portfolioData","block","e","filter","currentTarget","innerText","item","key","div","Boolean","window","location","hostname","match","ReactDOM","render","useLocation","pathname","config","duration","path","exact","component","About","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8137e8a2.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/Home.css'\r\n\r\nexport default function Home()\r\n{\r\n    return <iframe src=\"http://pscott.io/particles\"></iframe>    \r\n}\r\n","import React from 'react'\r\nimport { FaWindowClose } from 'react-icons/fa';\r\nimport { MdClose } from 'react-icons/md'\r\nimport '../styles/ProjectOverlay.css'\r\n\r\nexport default function ProjectOverlay(props)\r\n{\r\n    return (\r\n        <div className=\"ProjectOverlay\">\r\n            <div id=\"closeProject\" title=\"Close\" onClick={() => {props.setProject(false)}}>\r\n                <MdClose/>\r\n            </div>\r\n\r\n            <div className=\"project\">\r\n                <h1 id=\"project-heading\">{ props.project.name }</h1>\r\n                <div className=\"billboard-container\">\r\n                    <img src={ \"../images/\"+props.project.img }/>\r\n                </div>\r\n\r\n                <div className=\"text-container\">\r\n                    <h1>about\r\n                        <a href={props.project.link} target=\"_blank\"><span className=\"highlight\" style={{fontSize:'16px', marginLeft:'10px'}}>view this project</span></a>\r\n                    </h1> \r\n                    <hr/>\r\n                    { props.project.description.map(paragraph => {\r\n                        return <p>{paragraph}</p>\r\n                    })}\r\n                \r\n                    <h1>technology</h1>\r\n                    <ul>\r\n                        {\r\n                            props.project.tech.map(p => {\r\n                                return <li>{p}</li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default [\r\n    {\r\n        name: 'visas to vikas yoga',\r\n        link:'http://www.visastovikasokc.com/',\r\n        img: 'v2v.png',\r\n        description:[\r\n            \"This is a website I built for an Upwork client's yoga program based in Oklahoma City, OK. The site was built using Node.js, Express and hosted on Heroku. This site uses the Paypal Express Checkout API to process subscription payments for the yoga program.\",\r\n        ],\r\n        tech: ['HTML5', 'CSS3', 'Node.js', 'Heroku', 'Paypal Express Checkout API', 'jQuery']\r\n    },\r\n    {\r\n        name: 'everest',\r\n        link:'http://everestjs.com/',\r\n        img: 'everest.png',\r\n        description:[\"Everest is a live-trading cryptocurrency bot for the Poloniex exchange. Everest is a command line bot built with Node.js. I wanted to build a live-trading bot from a tutorial I found on Youtube. The only problem was, the bot in the tutorial was written in Python. I thought it would be a good challenge to port it over to Node.js.\"],\r\n        tech: ['Node.js', 'Poloniex API', 'Command Line']\r\n    },\r\n   \r\n    {\r\n        name: 'fateJS',\r\n        link:'http://pscott.io/fatedocs/',\r\n        img: 'fatejs.png',\r\n        description:['Modeled after Chance.js, fateJS is a very small Javascript library that generates random numbers, characters, booleans, etc. I built fateJS in order to build my chops in creating Javascript libraries from scratch.'],\r\n        tech: ['Javascript']\r\n    },\r\n    {\r\n        name: 'availabook',\r\n        link:'http://availabook.herokuapp.com/',\r\n        img: 'availabook.png',\r\n        description:[\r\n                        'Volunteer web application for the Thomas Cooper Library at the University of South Carolina. The application is named Availabook, as it allows students to subscribe to text message notifications when a particular book they are looking for is returned to the library.',\r\n                        'I created Availabook because I saw a need. Students could not get reliable notification as to when an important book that they needed was returned, so I decided to pioneer this project in order to fill the void.'\r\n                    ],\r\n        tech: ['HTML5', 'CSS3', 'Node.js', 'Express', 'Nexmo API', 'MongoDB', 'Javascript', 'Heroku']\r\n    },\r\n    {\r\n        name: 'carolina posting',\r\n        link:'http://carolinaposting.com/',\r\n        img: 'carolinaposting.png',\r\n        description:['Carolina Posting is a South Carolina-based delinquent tax posting company. I built the Carolina Posting website and I built software that enables them to upload .csv files with information of delinquent tax payers to a database. The software then generates tax notice PDFs that are ready-to-print and be posted.'],\r\n        tech: ['Node.js', 'Express', 'MongoDB/mLab', 'Amazon S3', 'Heroku']\r\n    },\r\n    {\r\n        name: 'pscott.io ❤️',\r\n        link:'/',\r\n        img: 'this-portfolio.png',\r\n        description:[\"This is my current portfolio. This application was built using ReactJS. The animations are handled with React Spring.\"],\r\n        tech: ['ReactJS', 'React Spring', 'Interactive Particles', 'HTML5', 'CSS3', 'Heroku']\r\n    },\r\n    {\r\n        name: 'github heatmap colorizer',\r\n        link:'https://github.com/pkellz/github-heatmap-colorizer',\r\n        img: 'github-colorizer.png',\r\n        description:[\"This is a very simple Chrome extension that 'colorizes' your Github contribution heatmap!\"],\r\n        tech: ['Chrome API', 'HTML5', 'CSS3', 'Javascript']\r\n    },\r\n\r\n    {\r\n        name: 'scott web agency',\r\n        link:'http://scottwebagency.com/',\r\n        img: 'swa.png',\r\n        description:['This is my web development agency website. I develop websites for individuals and small businesses in the Columbia, SC area.'],\r\n        tech: ['HTML5', 'CSS3', 'Heroku', 'Node.js', 'Express']\r\n    }\r\n]","import React, { useState } from 'react'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport ProjectOverlay from './ProjectOverlay'\r\nimport { IoIosArrowForward } from 'react-icons/io'\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/Portfolio.css'\r\n\r\nimport portfolioData from '../assets/portfolioData'\r\n\r\nexport default function Portfolio()\r\n{\r\n    const [showProject, setProject] = useState(false)\r\n    const [currentProject, setCurrentProject] = useState({})\r\n\r\n    const transitions = useTransition(showProject, null, {\r\n        from: { opacity:0 },\r\n        enter: { opacity: 1, position:'absolute' },\r\n        leave: { opacity: 0 }\r\n    })\r\n\r\n    return (\r\n        <div className=\"Portfolio\">\r\n            { !showProject && <Link id=\"closePortfolio\" to=\"/\" title=\"Home\"><span>Home</span><IoIosArrowForward/></Link> }\r\n        \r\n            <div className=\"grid\">\r\n                {\r\n                    portfolioData.map(block => (\r\n                        <div className=\"blocks\" onClick={e => { setProject(true); setCurrentProject(portfolioData.filter(p => p.name === e.currentTarget.innerText)[0])}}>\r\n                            <img src={\"../images/\"+block.img}/>    \r\n                            <div className=\"overlay\">\r\n                                <span>{block.name}</span>\r\n                            </div>\r\n                        </div>))\r\n                }\r\n            </div>\r\n            { transitions.map(({item, key, props}) => item && <animated.div key={key} style={props}><ProjectOverlay setProject={setProject} project={currentProject}/> </animated.div> ) }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport '../styles/About.css'\r\n\r\nexport default function()\r\n{\r\n    return <div className=\"About\">\r\n                <div className=\"text-container\">\r\n                    <h3>const <span className=\"highlight\">patrick </span>=</h3>\r\n                    <p>I am a <span className=\"highlight\">software engineer</span> and <span className=\"highlight\">full-stack web developer</span> based in Columbia, SC.\r\n                        I am a senior computer science student\r\n                        at the University of South Carolina (May '20).\r\n                        I teach JavaScript-focused programming tutorials on <a className=\"highlight\" target=\"_blank\" href=\"https://www.youtube.com/channel/UCV4AXpDSxschk8I0sCl8JXw\">Youtube</a>.\r\n                    </p>\r\n\r\n                    <p>\r\n                        Take a look at my <a href=\"https://drive.google.com/file/d/1tpw6J9v_rP1pujUGxrjK9WYQIg_WGi4E/view\" target=\"_blank\">\r\n                        <span className=\"highlight\">resume</span></a> and my <a href=\"https://github.com/pkellz\" target=\"_blank\"><span className=\"highlight\">Github</span></a> account.\r\n                        I'm available for freelance work. You can contact me at\r\n                        <a href=\"mailto:patrickscott2013@gmail.com\">\r\n                            <span className=\"highlight\"> patrickscott2013@gmail.com</span>\r\n                        </a>. \r\n                        If you are a recruiter, I love you, but please don’t call or email me ❤️\r\n                    </p>\r\n\r\n                    <h3 style={{fontSize:'40px'}}>;</h3>\r\n                    <p id=\"back-home\">\r\n                        <a href=\"http://localhost:3000/\">\r\n                            &lt; back home\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport {\n  Switch,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport Home from './Home'\nimport Portfolio  from './Portfolio'\nimport About from './About'\nimport { animated, useTransition } from 'react-spring'\nimport '../styles/App.css';\n\nexport default function App() {  \n  const location = useLocation()\n  const transitions = useTransition(location, location => location.pathname, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    config: { duration: 2000}\n  })\n\n  return (\n    transitions.map(({ item: location, props, key }) => (\n      <animated.div key={key} style={props}>\n        <Switch location={location}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/portfolio\" component={Portfolio} /> \n        </Switch>\n      </animated.div>\n    ))\n  )\n}"],"sourceRoot":""}